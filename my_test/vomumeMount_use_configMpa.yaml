apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-appconfigfiles
data:
  key-serverxml:
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder charset="utf-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
          <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
          <!-- 如需自定义关键字，用 %mdc{键名} 表示,程序中用MDC.put("键名","键值")设置，可动态设置 [%logger:%line]-->
          <Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] %logger %line --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n
          </Pattern>
      </encoder>
    </appender>
  key-loggingproperties:
      java -Xms1024m -Xmx2048m -Xmn1536m -Xss256k -XX:MaxPermSize=128m -XX:+UseConcMarr
      kSweepGC -XX:CMSFullGCsBeforeCompaction=5 -XX:+UseCMSCompactAtFullCollection -XXX
      :+PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xloggc:/tmp/jvm.log -XX:+HH
      eapDumpOnOutOfMemoryError -Dcom.sun.management.jmxremote -Dcom.sun.management.jmm
      xremote.port=4445 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management..
      jmxremote.authenticate=false -XX:HeapDumpPath=/tmp/heapdump.hprof -jar /data/appp
      deploy/$ENVIRONMENT/${PROJECT_JAR} >$jetty_log_path/$PROJECT_NAME.log


---
apiVersion: v1
kind: Pod
metadata:
  name: cm-test-app
spec:
  containers:
    - name: cm-test-app
      image: kubeguide/tomcat-app:v1
      ports:
        - containerPort: 8080
      volumeMounts:
        - name: serverxml
          mountPath: /configfiles
  volumes:
    - name: serverxml
      configMap:
        name: cm-appconfigfiles
        items:
          - key: key-serverxml
            path: server.xml
          - key: key-loggingproperties
            path: logging.properties

---
apiVersion: v1
kind: Pod
metadata:
  name: cm-test-app2
spec:
  containers:
    - name: cm-test-app2
      image: tomcat
      ports:
        - containerPort: 8080
      volumeMounts:
        - name: serverxml
          mountPath: /configfiles
  volumes:
    - name: serverxml
      configMap:
        name: cm-appconfigfiles